#!/usr/bin/env sh
set -euo pipefail
. "$(dirname "$0")/_/husky.sh"

echo "🔍 Running pre-push validation..."
echo "⏱️ This includes linting, typechecking, testing, and changeset validation"
echo "💡 Tip: Use 'git push --no-verify' to bypass in emergencies"

BRANCH=$(git branch --show-current)
echo "📝 Validating branch: $BRANCH"

# Ensure base refs exist locally for reliable diffing
git fetch -q origin main develop || true

# Determine the best base reference
# 1. Try tracking branch base first
TRACKING_BRANCH=$(git rev-parse --abbrev-ref --symbolic-full-name @{u} 2>/dev/null | sed 's/origin\///')
if [ -n "$TRACKING_BRANCH" ] && git show-ref --verify --quiet "refs/remotes/origin/$TRACKING_BRANCH"; then
  DEFAULT_BASE="origin/$TRACKING_BRANCH"
# 2. Then try develop if it exists
elif git show-ref --verify --quiet refs/remotes/origin/develop; then
  DEFAULT_BASE="origin/develop"
# 3. Then try main
elif git show-ref --verify --quiet refs/remotes/origin/main; then
  DEFAULT_BASE="origin/main"
# 4. Fallback to HEAD~1
else
  DEFAULT_BASE="HEAD~1"
fi
BASE=$(git merge-base HEAD "$DEFAULT_BASE" 2>/dev/null || echo "$DEFAULT_BASE")

# Export for Turbo to use
export TURBO_SCM_BASE="$BASE"

# Branch-aware changeset validation
if [ "$BRANCH" != "main" ] && [ "$BRANCH" != "develop" ]; then
  # Only enforce changesets when code changed (skip docs/chore only changes)
  CHANGED_CODE_COUNT=$(git diff --name-only "$BASE"...HEAD 2>/dev/null | grep -E '\.(ts|tsx|js|jsx|json)$' | wc -l | tr -d ' ' || echo 0)
  if [ "${CHANGED_CODE_COUNT:-0}" -gt 0 ]; then
    NEW_CHANGESETS=$(git diff --name-only "$BASE"...HEAD -- .changeset/*.md 2>/dev/null | wc -l | tr -d ' ')
    if [ "${NEW_CHANGESETS:-0}" -eq 0 ]; then
      echo "⚠️  No new changeset added on feature branch '$BRANCH'"
      echo "💡 This branch modifies code but doesn't include a changeset"
      echo "🔧 Generate one with: pnpm changeset"
      echo "🚀 Or bypass with: git push --no-verify"
      exit 1
    else
      echo "✅ New changeset found (${NEW_CHANGESETS} files)"
    fi
  else
    echo "ℹ️ Code changeset enforcement skipped (no TS/JS/JSON changes since base)"
  fi
fi

# Use changed-only validation for feature branches, full validation for main/develop
if [ "$BRANCH" = "main" ] || [ "$BRANCH" = "develop" ]; then
  echo "🧪 Running full validation suite for $BRANCH..."
  pnpm run validate
else
  echo "🧪 Running changed-only validation for feature branch..."
  pnpm run validate:changed
fi

echo "🎉 All validations passed! Ready to push."
