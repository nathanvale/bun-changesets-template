{
  "$schema": "https://json.schemastore.org/tsconfig",
  "compilerOptions": {
    // Why: ESNext for modern JS features without transpilation overhead
    "target": "ESNext",
    "lib": ["ESNext", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    // Why: "bundler" resolution matches Bun's native behavior
    // Note: tsconfig.build.json overrides to "NodeNext" for Node.js compatibility
    "moduleResolution": "bundler",
    "moduleDetection": "force", // Why: Treat all files as modules (no global scripts)
    "jsx": "react-jsx", // Why: React 17+ automatic JSX transform

    // Why: Generate .d.ts files for library consumers
    "declaration": true,
    "declarationMap": true, // Why: Enable IDE "Go to Definition" for library users
    "sourceMap": true, // Why: Better debugging experience
    "inlineSourceMap": false,
    "outDir": "./dist",
    "removeComments": false, // Why: Keep JSDoc comments for documentation
    "noEmitOnError": true, // Why: Don't emit broken code
    "preserveConstEnums": true,
    "preserveWatchOutput": true, // Why: Less console noise during watch mode

    // Why: Maximum strictness catches bugs at compile time
    "strict": true,
    "noUnusedLocals": true, // Why: Dead code increases bundle size
    "noUnusedParameters": true, // Why: Unused params indicate incomplete refactoring
    "exactOptionalPropertyTypes": true, // Why: Prevent undefined being assigned to optional props
    "noImplicitReturns": true, // Why: All code paths should return explicitly
    "noFallthroughCasesInSwitch": true, // Why: Prevent common switch/case bugs
    "noUncheckedIndexedAccess": true, // Why: Force null checks on array/object access
    "noImplicitOverride": true, // Why: Make inheritance explicit with 'override' keyword
    "noPropertyAccessFromIndexSignature": true, // Why: Use bracket notation for index signatures
    "allowUnusedLabels": false,
    "allowUnreachableCode": false,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "strictBindCallApply": true,
    "strictPropertyInitialization": true,
    "useUnknownInCatchVariables": true,

    "allowJs": true,
    "checkJs": true,
    "maxNodeModuleJsDepth": 1,

    "isolatedModules": true,
    "verbatimModuleSyntax": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true,

    "skipLibCheck": true,
    "skipDefaultLibCheck": true,
    "incremental": true,
    "tsBuildInfoFile": ".tsbuildinfo",

    // Limit ambient type inclusions explicitly; include test/runtime globals needed outside build output.
    "types": [
      "bun-types",
      "node", // provides process, global, fs, etc.
      "vitest/globals", // describe/it/expect globals for test setup files
      "react" // JSX runtime/types so fragments in setup compile
    ],

    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"],
      "@tests/*": ["./tests/*"]
      // Removed unused @types, @utils and @config paths (can reintroduce when directories exist)
    }
  },
  "include": ["src/**/*", "types/**/*", "tests/**/*", "scripts/**/*", "vitest.config.ts", "vitest.setup.tsx", "packages/utils/src/number-utils.test.ts", "packages/utils/src/path-utils.test.ts"],
  "exclude": ["node_modules", "dist", "build", "coverage", ".turbo", "**/.bun/**"],
  "ts-node": {
    "esm": true,
    "experimentalSpecifierResolution": "node",
    "transpileOnly": true
  }
}
