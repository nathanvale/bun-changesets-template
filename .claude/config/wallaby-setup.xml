<!-- Wallaby.js Setup and Configuration Guide -->
<wallaby-setup-guide>
  <ide-plugins>
    <vscode>
      <extension-id>WallabyJs.wallaby-vscode</extension-id>
      <marketplace-url>https://marketplace.visualstudio.com/items?itemName=WallabyJs.wallaby-vscode</marketplace-url>
      <shortcuts>
        <start>Cmd+Shift+R R (Mac) | Ctrl+Shift+R R (Win/Linux)</start>
        <stop>Cmd+Shift+R S</stop>
        <run-tests>Cmd+Shift+R T</run-tests>
        <toggle-coverage>Cmd+Shift+R C</toggle-coverage>
      </shortcuts>
    </vscode>
    
    <webstorm>
      <plugin-name>Wallaby.js</plugin-name>
      <install-path>Preferences → Plugins → Marketplace</install-path>
      <shortcuts>
        <start>Ctrl+Shift+R R</start>
        <stop>Ctrl+Shift+R S</stop>
        <run-line>Ctrl+Shift+R L</run-line>
      </shortcuts>
    </webstorm>
    
    <sublime>
      <package>Wallaby</package>
      <install>Package Control → Install Package → Wallaby</install>
    </sublime>
  </ide-plugins>
  
  <configuration-validation>
    <required-files>
      <file>wallaby.js or wallaby.cjs in project root</file>
      <file>vitest.config.ts (auto-detected)</file>
    </required-files>
    
    <checks>
      <check>wallaby.js file exists and is valid</check>
      <check>Tests follow .unit.test.ts naming convention</check>
      <check>Exclusion patterns exclude slow tests</check>
      <check>Performance settings optimized for ADHD workflow</check>
      <check>Node version matches project requirements</check>
    </checks>
  </configuration-validation>
  
  <quick-fixes>
    <issue name="wallaby-not-finding-tests">
      <symptom>No tests appearing in Wallaby</symptom>
      <solution>
        1. Check file naming (.unit.test.ts)
        2. Verify test location matches config
        3. Clear Wallaby cache
        4. Restart IDE
      </solution>
    </issue>
    
    <issue name="slow-wallaby-startup">
      <symptom>Wallaby takes > 2 seconds to start</symptom>
      <solution>
        1. Exclude node_modules in wallaby.js
        2. Exclude dist/build directories
        3. Reduce initial worker count
        4. Use specific test patterns
      </solution>
    </issue>
    
    <issue name="inline-values-not-showing">
      <symptom>Runtime values not displaying inline</symptom>
      <solution>
        1. Enable "Show Value" in Wallaby settings
        2. Add console.log for complex objects
        3. Use Wallaby comments: /*?*/ after expression
      </solution>
    </issue>
    
    <issue name="coverage-indicators-missing">
      <symptom>No coverage colors in editor</symptom>
      <solution>
        1. Enable coverage in wallaby.js
        2. Check coverage colors in settings
        3. Verify file is in coverage scope
      </solution>
    </issue>
  </quick-fixes>
  
  <adhd-optimizations>
    <setting name="auto-start">
      <value>true</value>
      <reason>No manual step to remember</reason>
    </setting>
    
    <setting name="run-mode">
      <value>onsave</value>
      <reason>Instant feedback on save</reason>
    </setting>
    
    <setting name="delays">
      <value>300ms</value>
      <reason>Reduces visual jumpiness</reason>
    </setting>
    
    <setting name="workers">
      <initial>6</initial>
      <regular>2</regular>
      <reason>Fast startup, preserve CPU for IDE</reason>
    </setting>
    
    <setting name="colors">
      <covered>#4caf50</covered>
      <partial>#ffcc00</partial>
      <uncovered>#ff5252</uncovered>
      <reason>Clear visual distinction</reason>
    </setting>
  </adhd-optimizations>
  
  <wallaby-comments>
    <comment syntax="/*?*/">Show expression value inline</comment>
    <comment syntax="/*?.*/">Show object properties</comment>
    <comment syntax="/*??*/">Show async resolved value</comment>
    <comment syntax="console.log">Show in Wallaby console</comment>
  </wallaby-comments>
  
  <terminal-alternative-commands>
    <instead-of command="pnpm test">Use Wallaby.js UI</instead-of>
    <instead-of command="vitest --watch">Use Wallaby.js auto-run</instead-of>
    <instead-of command="npm test -- --coverage">Use Wallaby.js coverage indicators</instead-of>
    <instead-of command="vitest --ui">Use Wallaby.js App</instead-of>
  </terminal-alternative-commands>
</wallaby-setup-guide>