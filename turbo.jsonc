{
  // Turborepo 2.5+ configuration with local schema for cache stability
  "$schema": "./node_modules/turbo/schema.json",

  "tasks": {
    // Build task: Compile TypeScript and generate output artifacts
    "build": {
      "dependsOn": ["^build"], // Wait for upstream packages to build first
      "outputs": ["dist/**", "dist-node/**", "dist-types/**", ".tsbuildinfo", ".next/**"], // Cache all build outputs
      "inputs": [
        "$TURBO_DEFAULT$",
        "!*.md",
        "!**/*.md",
        "!**/*.test.ts",
        "!**/*.spec.ts",
        "!tests/**",
        ".env*",
      ],
      "cache": true,
    },

    // Test task: Run unit and integration tests with multi-project support
    "test": {
      "dependsOn": ["^build"], // Wait for upstream packages to build first
      "outputs": [
        "coverage/**",
        "test-results/**",
        ".vitest/**"
      ], // Cache test coverage and results
      "inputs": [
        "$TURBO_DEFAULT$",
        "!*.md",
        "!**/*.md",
        "!docs/**",
        "!.changeset/**",
        "vitest.config.ts",
        "vitest.setup.tsx",
        "vitest.setup.ts",
        ".env*"
      ],
      "cache": true,
      "env": ["NODE_ENV", "VITEST_WATCH"], // Test behavior may vary by environment
    },

    // CI Test task: Run tests with CI-specific settings (coverage, bail on first failure)
    "test:ci": {
      "dependsOn": ["^build"], // Wait for upstream packages to build first
      "outputs": [
        "coverage/**",
        "test-results/**",
        ".vitest/**"
      ], // Cache test coverage and results
      "inputs": [
        "$TURBO_DEFAULT$",
        "!*.md",
        "!**/*.md",
        "!docs/**",
        "!.changeset/**",
        "vitest.config.ts",
        "vitest.setup.tsx",
        "vitest.setup.ts",
        ".env*"
      ],
      "cache": true,
      "env": ["NODE_ENV", "CI", "GITHUB_ACTIONS"], // CI environment affects test behavior
    },

    // Distribution test: Verify built artifacts work correctly
    "test:dist": {
      "dependsOn": ["^build"], // Wait for upstream builds (not just local)
      "inputs": [
        "src/**/*.test.ts", // Test files
        "tests/**/*.ts", // Test utilities
        "dist/**", // Built Bun artifacts
        "dist-node/**", // Built Node.js artifacts
      ],
      "cache": true,
    },

    // Lint task: Code quality and style checking
    "lint": {
      "outputs": [".eslintcache"], // Cache lint results for faster re-runs
      "inputs": ["$TURBO_DEFAULT$", "!*.md", "!**/*.md", "!dist/**", "!coverage/**"],
      "cache": true,
    },

    // Type checking: Static analysis for TypeScript errors
    "typecheck": {
      // Use transit graph so downstream typechecks see upstream changes without fully serializing
      "dependsOn": ["transit"],
      "inputs": ["$TURBO_DEFAULT$", "!*.md", "!**/*.md", "!**/*.js", "!**/*.jsx"],
      "cache": true,
    },

    // Clean task: Remove generated files (never cached)
    "clean": {
      "cache": false,
    },

    // Development server: Long-running process (never cached)
    "dev": {
      "cache": false,
      "persistent": true, // Indicates this is a long-running service
      // Sidecar pattern can be enabled later with "with": ["build:watch"]
      // when a build watcher task is defined
    },

    // Test watch task: Run tests in watch mode for development
    "test:watch": {
      "cache": false,
      "persistent": true,
      "dependsOn": ["^build"], // Ensure upstream packages are built first
      "env": ["VITEST_WATCH"],
    },

    // Coverage merge task: Combine coverage from all projects
    "test:coverage:merge": {
      "dependsOn": ["test:coverage"],
      "outputs": ["coverage/**"],
      "cache": false,
    },

    // Test coverage task: Run tests with coverage collection
    "test:coverage": {
      "dependsOn": ["^build"],
      "outputs": [
        "coverage/**",
        "test-results/**"
      ],
      "inputs": [
        "$TURBO_DEFAULT$",
        "!*.md",
        "!**/*.md",
        "vitest.config.ts"
      ],
      "cache": true,
      "env": ["NODE_ENV"],
    },

    // Transit node: propagates dependency graph changes for tasks that need awareness without full serialization
    "transit": {
      "dependsOn": ["^transit"],
      "cache": true,
    },
  },

  // Global environment variables that affect all tasks
  "globalEnv": ["CI"],

  // Environment variables to pass through without hashing
  "globalPassThroughEnv": [],

  // Root-level files that affect task execution across packages
  "globalDependencies": [
    "tsconfig.json", // Root TypeScript config
    "tooling/tsconfig/base.json", // Shared TS base config
    "tooling/tsconfig/library.json", // Library-specific TS config
    ".changeset/config.json", // Changeset configuration
    "eslint.config.js", // ESLint configuration
    "vitest.config.ts", // Test configuration with multi-project support
    "turbo.json*", // This config file (supports .jsonc)
    ".env*", // Environment files
  ],

  // Remote caching configuration (Vercel free tier since Dec 2024)
  // To enable: Set TURBO_TOKEN and TURBO_TEAM in CI/CD environment variables
  // Get token from: https://vercel.com/account/tokens
  // Team slug: your-team-name (or personal username for individuals)
  //
  // For cache signature (optional security enhancement):
  // 1. Generate a secret key: openssl rand -base64 32
  // 2. Set TURBO_REMOTE_CACHE_SIGNATURE_KEY in CI/CD secrets
  // 3. Change signature to true below
  // This prevents cache poisoning attacks but is optional for most teams
  //
  // Performance tips for >85% cache hit rates:
  // - Use tight input globs (already configured)
  // - Include all relevant config files in globalDependencies
  // - Use --continue=dependencies-successful for resilient builds
  // - Monitor with turbo run <task> --summarize for cache analysis
  "remoteCache": {
    "enabled": true,
    "signature": false, // Set to true after configuring TURBO_REMOTE_CACHE_SIGNATURE_KEY
    "preflight": true, // Validate cache availability before operations
    "timeout": 60, // 60-second artifact retrieval timeout
    "uploadTimeout": 120 // 2-minute upload timeout for large artifacts
  },

  // Future enhancements:
  // - Add "ui" field for task descriptions in Turborepo UI
  // - Add "with" field for sidecar processes (dev + build watchers)

  // Boundaries validation: Enforce package dependency rules
  // Note: This feature requires Turborepo Enterprise or may not be available in current version
  // Keeping as documentation for future when available
  // "boundaries": {
  //   "@template/utils": { "allowed": [] }, // Pure shared utilities, no dependencies
  //   "@template/app": { "allowed": ["@template/utils"] }, // App can import utils
  //   "@template/server": { "allowed": ["@template/utils"] } // Server can import utils
  // }
}
